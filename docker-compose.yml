version: '3.1'
services:
  db:
    image: postgres:16.1
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: krontravel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    networks:
      - krongid_network
  backend:
    build:
      context: ./
    ports:
      - "8080:8080"
    expose:
      - 8080
    networks:
      - krongid_network

#    command: gunicorn api.wsgi -b 0.0.0.0:8080
#    bash -c "
#      ./wait-for-postgres.sh db
#      && python manage.py migrate
#      && python manage.py createcachetable
#      && gunicorn api.wsgi -b 0.0.0.0:8080
#      "
    depends_on:
      - db
  nginx:
    image: nginx:alpine
#    restart: always
#    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

networks:
  krongid_network: